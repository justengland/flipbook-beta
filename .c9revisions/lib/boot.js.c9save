{"ts":1368754556028,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nvar express = require('../../..')\n  , fs = require('fs');\n\nmodule.exports = function(parent, options){\n  var verbose = options.verbose;\n  fs.readdirSync(__dirname + '/../controllers').forEach(function(name){\n    verbose && console.log('\\n   %s:', name);\n    var obj = require('./../controllers/' + name)\n      , name = obj.name || name\n      , prefix = obj.prefix || ''\n      , app = express()\n      , method\n      , path;\n\n    // allow specifying the view engine\n    if (obj.engine) app.set('view engine', obj.engine);\n    app.set('views', __dirname + '/../controllers/' + name + '/views');\n\n    // before middleware support\n    if (obj.before) {\n      path = '/' + name + '/:' + name + '_id';\n      app.all(path, obj.before);\n      verbose && console.log('     ALL %s -> before', path);\n      path = '/' + name + '/:' + name + '_id/*';\n      app.all(path, obj.before);\n      verbose && console.log('     ALL %s -> before', path);\n    }\n\n    // generate routes based\n    // on the exported methods\n    for (var key in obj) {\n      // \"reserved\" exports\n      if (~['name', 'prefix', 'engine', 'before'].indexOf(key)) continue;\n      // route exports\n      switch (key) {\n        case 'show':\n          method = 'get';\n          path = '/' + name + '/:' + name + '_id';\n          break;\n        case 'list':\n          method = 'get';\n          path = '/' + name + 's';\n          break;\n        case 'edit':\n          method = 'get';\n          path = '/' + name + '/:' + name + '_id/edit';\n          break;\n        case 'update':\n          method = 'put';\n          path = '/' + name + '/:' + name + '_id';\n          break;\n        case 'create':\n          method = 'post';\n          path = '/' + name;\n          break;\n        case 'index':\n          method = 'get';\n          path = '/';\n          break;\n        default:\n          throw new Error('unrecognized route: ' + name + '.' + key);\n      }\n\n      path = prefix + path;\n      app[method](path, obj[key]);\n      verbose && console.log('     %s %s -> %s', method.toUpperCase(), path, key);\n    }\n\n    // mount the app\n    parent.use(app);\n  });\n};"]],"start1":0,"start2":0,"length1":0,"length2":2106}]],"length":2106}
{"contributors":[],"silentsave":false,"ts":1368755632926,"patch":[[{"diffs":[[0,"re('"],[-1,"../../..')\n  ,"],[1,"express') , \n   "],[0," fs "]],"start1":20,"start2":20,"length1":22,"length2":24}]],"length":2108,"saved":false}
